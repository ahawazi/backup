Route::get('/insurance/{insurance}', InsuranceController::class)->name('insurance.show');


<?php

namespace App\Http\Controllers;

use App\Models\Insurance;
use Illuminate\Http\Request;

class InsuranceController
{
    public function __invoke(Request $request, Insurance $insurance)
    {
        return view('insurance', [
            'insurance' => $insurance,
        ]);
    }
}


<x-layouts.app>
    <div class="container grid gap-12 p-6 mx-auto lg:grid-cols-3">
        <div class="col-span-2 lg:col-span-2">
            <div>
                <img src="{{ $insurance->getFirstMediaUrl('logo') }}" alt="{{ $insurance->name }}"
                    class="object-cover w-full h-auto shadow-xl rounded-3xl aspect-video">
            </div>

            <div
                class="relative lg:auto-cols-auto lg:grid-flow-col p-6 -mt-12 mx-4 sm:-mt-24 bg-white rounded-3xl shadow-lg md:mx-8 md:p-8">
                <h1 class="text-3xl md:text-5xl font-bold text-slate-800 mb-2">
                    {{ $insurance->name }}
                </h1>
                <p
                    class="text-lg text-slate-500 mt-3 container mx-auto prose md:prose-xl lg:prose-2xl prose-slate prose-blue prose-img:rounded-xl prose-figcaption:hidden prose-blockquote:border-[var(--tw-prose-links)]">
                    {{ __('Insurance details') }}: {!! $insurance->body !!}
                </p>
            </div>
        </div>

        <div class="lg:col-span-1 flex flex-col gap-6">
            <div class="p-6 bg-blue-100 rounded-xl shadow-md">
                <p class="text-xl font-semibold text-slate-700 mb-4">
                    {{ __('External url') }}:
                </p>
                <div class="flex items-center">
                    <a href="{{ $insurance->external_url }}" target="_blank"
                        class="flex items-center px-3 py-2 bg-fuchsia-100 text-fuchsia-600 rounded-lg hover:bg-fuchsia-200 transition duration-200">
                        {{ $insurance->external_url }}
                        <x-icon name="heroicon-c-link" class="w-4 h-4 mr-2 text-fuchsia-400" />
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="mt-48"></div>

    <div class="-mb-48">
        <livewire:subscription-form />
    </div>
</x-layouts.app>


test : 
<?php

use App\Enums\FacilityType;
use App\Models\Facility;
use App\Models\Insurance;
use App\Models\User;

it('has attributes', function () {
    expect(Insurance::factory()->make())
        ->name->not->toBeNull()
        ->slug->toBeNull()

        ->and(Insurance::factory()->create())
        ->slug->not->toBeNull();
});

it('is accepted by many doctors', function () {
    $user = User::factory()->create();
    $insurances = Insurance::factory(2)->create();

    $user->insurances_accepts()->attach($insurances);

    expect($user->insurances_accepts()->count())->toBe(2);
});

it('covers many patients', function () {
    $user = User::factory()->create();
    $insurances = Insurance::factory(2)->create();

    $user->insurances()->attach($insurances);

    expect($user->insurances()->count())->toBe(2);
});

it('can belong to many facilities', function () {
    $facility = Facility::factory()->state(['type' => FacilityType::Clinic])->create();
    $insurances = Insurance::factory(2)->create();

    $facility->insurances()->attach($insurances);

    expect($facility->insurances()->count())->toBe(2);
});

it('separates branches and other facilities based on facility type', function () {
    $insurance = Insurance::factory()->create();
    $facilities = Facility::factory(2)->state(['type' => FacilityType::Insurance])->create();

    $insurance->facilities()->attach($facilities);

    expect($insurance->facilities()->count())->toBe(0)
        ->and($insurance->branches()->count())->toBe(2);
});

it('get the insurances from relation insurances_accepts', function () {
    $user = User::factory()->create();
    $insurances = Insurance::factory(2)->create();

    $user->insurances_accepts()->attach($insurances);

    expect($user->insurances_accepts()->count())->toBe(2);
});

it('get the insurances from relation insurances', function () {
    $user = User::factory()->create();
    $insurances = Insurance::factory(2)->create();

    $user->insurances()->attach($insurances);

    expect($user->insurances()->count())->toBe(2);
});

it ('get insurances from model insurance', function () {
    $user = User::factory()->create();
    $insurances = Insurance::factory(2)->create();

    $user->insurances()->attach($insurances);

    expect($insurances->count())->toBe(2);
});


page test : 
<?php

use App\Models\Insurance;
use function Pest\Laravel\get;

it('shows insurance', function () {
    $insurance = Insurance::factory()->create();

    get(route('insurance.show', $insurance->id))
        ->assertSee($insurance->name)
        ->assertSee($insurance->body)
        ->assertSee($insurance->external_url)
        ->assertSee($insurance->slug);
});


"Insurance details": "توضیحات بیمه",



